BASEDIR=../
ifndef VCS_REVISION
GIT_REVISION = $(shell git log -n1 --pretty=oneline 2> /dev/null | cut -d " " -f 1)
SVN_REVISION = $(shell svnversion 2> /dev/null | grep -v exp | grep -v version)
VCS_REVISION = $(if $(SVN_REVISION),$(SVN_REVISION),$(GIT_REVISION))
endif

ifndef MYPREFIX
MYPREFIX = $(HOME)
endif

ifndef COPTS
COPTS    = -g -O0
COPTS    = -O2
endif

ifndef ARCH
ARCH     = $(if $(findstring x86_64,$(shell uname -m)),-m64,-m32)
endif

CXX      = g++
CXXFLAGS = $(ARCH) $(COPTS) -D VCS_REVISION=$(VCS_REVISION) -Wall -fPIC -Wno-unused-local-typedefs
LDFLAGS  = $(ARCH) $(COPTS) $(SYSLIBS) -L.

GCCVER   = $(shell gcc -dumpversion | cut -d "." -f -2 | sed "s/\.//")
CXXFLAGS += -std=$(shell test $(GCCVER) -gt 42 && echo "c++0x" || echo "c++98")

# Local libs
#CXXFLAGS += -I$(BASEDIR) - can cause problems with doxygen - better use relative includes
LDFLAGS  += -L$(BASEDIR)/lib
LDFLAGS  += -Wl,-rpath,$(BASEDIR)/lib

# Boost
# Use Boost from CMSSW if CMSSW env available otherwise fall back to system boost
BOOST_LIBDIR = $(shell test ! -z $(CMSSW_BASE) && cd $(CMSSW_BASE) && scram tool info boost | sed -n 's/LIBDIR=//p')
BOOST_INCDIR = $(shell test ! -z $(CMSSW_BASE) && cd $(CMSSW_BASE) && scram tool info boost | sed -n 's/INCLUDE=//p')
ifndef BOOST_INCDIR
LDFLAGS  += -lboost_regex -L$(BOOST_LIBDIR)
CXXFLAGS += -I$(BOOST_INCDIR)
endif

# Kappa
KAPPADIR = $(shell cd $(BASEDIR)/..; pwd)
CXXFLAGS += -I$(KAPPADIR)
LDFLAGS  += -L$(KAPPADIR)/Kappa/lib
LDFLAGS  += -Wl,-rpath,$(KAPPADIR)/Kappa/lib

all: $(PROGRAM)

%.o: %.cc %.cpp %.hxx %.h
	$(CXX) -c -o $@ $< $(CXXFLAGS)

%.so: $(LIBFILES)
	 $(CXX) -shared -o $@ $^ $(LDFLAGS)
	mkdir -p $(BASEDIR)/lib
	-test ! $@ -ef $(BASEDIR)/lib/`basename $@` && cp $@ $(BASEDIR)/lib

%.a: $(LIBFILES)
	ar rcs $@ $^
	mkdir -p $(BASEDIR)/lib
	-test ! $@ -ef $(BASEDIR)/lib/`basename $@` && cp $@ $(BASEDIR)/lib

install: $(PROGRAM)

clean:
	@rm -f $(PROGRAM) $(LIBFILES)
